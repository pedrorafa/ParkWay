package data.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;

import data.Util.DbUtil;
import data.VO.HistVaga;

public class HistVagaRepo {
	private Connection connection;

	public HistVagaRepo() {
		connection = DbUtil.getConnection();
	}

	public void add(HistVaga p) {

		try {

			PreparedStatement preparedStatement = connection.prepareStatement(
					"exec sp_tbHistVaga ?,?,?,?,?"+
					"INSERT INTO TBHISTVAGA " + "(IdVeiculo, IdVaga, DataInicio, DataFim, IsActive)"
							+ " VALUES (?,?,?,?,?)");

			preparedStatement.setInt(1, p.getIdVeiculo());
			preparedStatement.setInt(2, p.getIdVaga());
			preparedStatement.setDate(3, p.getDataInicio());
			preparedStatement.setDate(4, p.getDataFim());
			preparedStatement.setBoolean(5, p.getIsActive());

			preparedStatement.execute();

		} catch (Exception e) {
			e.printStackTrace();
		}

	} // addPeople

	public void update(HistVaga p) {
		try {

			PreparedStatement preparedStatement = connection.prepareStatement("UPDATE TBCLIENTE SET "
					+ "Nome = ?, "
					+ "tipodelogradouro = ?, logradouro = ?, estado = ?, cidade = ?, bairro = ?, CEP = ? "
					+ "where CPF = ?");

			preparedStatement.setString(1, p.getNome());
			preparedStatement.setString(2, p.getEndereco().getTipodelogradouro());
			preparedStatement.setString(3, p.getEndereco().getLogradouro());
			preparedStatement.setString(4, p.getEndereco().getEstado());
			preparedStatement.setString(5, p.getEndereco().getCidade());
			preparedStatement.setString(6, p.getEndereco().getBairro());
			preparedStatement.setString(7, p.getEndereco().getCep());

			preparedStatement.setString(8, p.getCPF());

			preparedStatement.execute();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void del(HistVaga p) {
		try {

			PreparedStatement preparedStatement = connection.prepareStatement("DELETE FROM TBCLIENTE WHERE CPF = ?");

			preparedStatement.setString(1, p.getCPF());

			preparedStatement.execute();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public HistVaga get(HistVaga p) {
		return new HistVaga(); // TODO: Work on it
	}

	public ArrayList<HistVaga> list(HistVaga p) {
		return new ArrayList<HistVaga>(); // TODO: Work on it
	}
}
